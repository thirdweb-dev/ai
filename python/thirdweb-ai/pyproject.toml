[tool.poetry]
name = "thirdweb-ai"
version = "0.1.4"
description = "thirdweb AI"
authors = ["thirdweb <support@thirdweb.com>"]
license = "Apache-2.0"
readme = "README.md"
keywords = ["thirdweb", "sdk", "crypto", "agent", "ai", "web3", "onchain"]
packages = [{include = "thirdweb_ai", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
pydantic = "^2.10.6"
jsonref = "^1.1.0"
httpx = "^0.28.1"
openai-agents = {version = ">=0.0.1", optional = true}
autogen-core = {version = ">=0.4.0", optional = true}
mcp = {version = ">=1.3.0", optional = true}
langchain-core = {version = ">=0.3.0", optional = true}
llama-index-core = {version = ">=0.12.0", optional = true}
goat-sdk = { version = ">=0.1.0", optional = true }
smolagents = {version = ">=1.10.0", optional = true}
pydantic-ai = {version = ">=0.0.39", optional = true}
coinbase-agentkit = {version = "^0.1.0", optional = true}


[tool.poetry.group.dev.dependencies]
ruff = "^0.9.10"
pyright = "^1.1.396"

[tool.pyright]
include = ["src"]
typeCheckingMode = "strict"
reportUnknownVariableType = "none"
reportUnknownLambdaType = "none"
reportUnknownArgumentType = "none"
reportMissingTypeStubs = "none"
reportAbstractUsage = "none"
reportUnknownMemberType = "none"


executionEnvironments = [
  { root = "src/thirdweb_ai/adapters", reportMissingImports = "none", reportUnknownParameterType = "none", reportAttributeAccessIssue = "none", reportUntypedBaseClass = "none"},
  { root = "src" }
]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.ruff.lint]
extend-select = [
  "E", "F", "W", "I", "N", "UP", "A", "B", "ASYNC", "C4", "COM", "SIM", 
  "RET", "YTT", "PTH", "INT", "TID", "SLOT", "SLF", "RSE", "Q", "PT", "PYI", "T20", 
  "PIE", "LOG", "ICN", "ISC", "FA", "T10", "DTZ", "EXE", "RUF", "C", "FURB", "PERF",
  "FLY", "PLC", "PLE", "PLW", "PGH", 
]
ignore = [
  "SIM103", "E501", "UP017", "ISC001", "COM812", "PLC0105", "C901"
]

[tool.ruff.lint.isort]
known-first-party = ["thirdweb_ai"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.extras]
all = ["langchain-core", "goat-sdk", "openai-agents", "autogen-core", "llama-index-core", "coinbase-agentkit", "mcp", "smolagents", "pydantic-ai"]
langchain = ["langchain-core"]
goat = ["goat-sdk"]
openai = ["openai-agents"]
autogen = ["autogen-core"]
llama-index = ["llama-index-core"]
agentkit = ["coinbase-agentkit"]
mcp = ["mcp"]
smolagents = ["smolagents"]
pydantic-ai = ["pydantic-ai"]
